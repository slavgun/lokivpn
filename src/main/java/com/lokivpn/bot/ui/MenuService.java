package com.lokivpn.bot.ui;

import com.lokivpn.bot.TelegramBot;
import com.lokivpn.service.AdminService;
import com.lokivpn.service.VpnProvisionService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.commands.SetMyCommands;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.commands.BotCommand;
import org.telegram.telegrambots.meta.api.objects.webapp.WebAppInfo;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.bots.AbsSender;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;


import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

@Service
public class MenuService {

    private static final Logger logger = LoggerFactory.getLogger(MenuService.class);

    private final AdminService adminService;

    public MenuService(AdminService adminService) {
        this.adminService = adminService;
    }

    public void sendMainMenu(String chatId, TelegramLongPollingBot bot) {
        try {
            SendPhoto photo = new SendPhoto();
            photo.setChatId(chatId);

            // Load image
            InputStream inputStream = getClass().getClassLoader().getResourceAsStream("images/loki.JPG");
            if (inputStream == null) {
                logger.error("Image not found in resources.");
                sendErrorMessage(chatId, bot, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
                return;
            }

            InputFile inputFile = new InputFile(inputStream, "loki.JPG");
            photo.setPhoto(inputFile);

            // Add caption
            photo.setCaption("""
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LOKIVPNüê∂

            –ü–æ–∫–∞ —á—Ç–æ —Å–µ—Ä–≤–∏—Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –Ω–æ –µ—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã –º–æ–π —Ö–æ–∑—è–∏–Ω –∫—É–ø–∏–ª –º–Ω–µ –≤–∫—É—Å–Ω—è—à–∫–∏, –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –µ–º—É –Ω–∞ –∫–∞—Ä—Ç—É. –ù–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, —è —Å–∫–∏–Ω—É —Ä–µ–∫–≤–∏–∑–∏—Ç—ã‚ù£Ô∏è
            """);

            // Create buttons
            InlineKeyboardButton purchaseButton = createButton("üîê –ü–æ–ª—É—á–∏—Ç—å VPN", "purchase_vpn", null);
            InlineKeyboardButton keysButton = createButton("üîë –ú–æ–∏ –∫–ª—é—á–∏", "my_keys", null);
            InlineKeyboardButton instructionButton = createButton("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "instruction", null);
            InlineKeyboardButton supportButton = createButton("üê∂ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", null, "https://t.me/lokivpn_support");

            // Add buttons to the list
            List<List<InlineKeyboardButton>> buttons = new ArrayList<>();
            buttons.add(Collections.singletonList(purchaseButton));
            buttons.add(Collections.singletonList(keysButton));
            buttons.add(Collections.singletonList(instructionButton));
            buttons.add(Collections.singletonList(supportButton));

            // Check admin role and add the admin button if applicable
            if (adminService.isAdmin(chatId)) {
                InlineKeyboardButton adminButton = createButton("üõ†Ô∏è –û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω–∫—É", null, "https://t.me/lokivpnbot/lokivpn_admin");
                buttons.add(Collections.singletonList(adminButton));
            }

            InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
            keyboardMarkup.setKeyboard(buttons);

            photo.setReplyMarkup(keyboardMarkup);

            bot.execute(photo);
        } catch (TelegramApiException e) {
            logger.error("Failed to send main menu: {}", e.getMessage(), e);
        }
    }

    public void handlePurchaseVpn(String chatId, TelegramLongPollingBot bot, VpnProvisionService vpnProvisionService) {
        vpnProvisionService.handleGetVpn(chatId, bot);
    }


    public void sendUnknownCommand(String chatId, TelegramLongPollingBot bot) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.");

        try {
            bot.execute(message);
        } catch (TelegramApiException e) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {}", e.getMessage(), e);
        }
    }

    public void sendUnknownCallback(String chatId, TelegramLongPollingBot bot) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("‚ö†Ô∏è –û–±—Ä–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");

        try {
            bot.execute(message);
        } catch (TelegramApiException e) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ callback: {}", e.getMessage(), e);
        }
    }

    public void setupBotCommands(AbsSender bot) {
        List<BotCommand> commands = List.of(
                new BotCommand("/start", "\uD83C\uDFE1 –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        );

        try {
            bot.execute(new SetMyCommands(commands, null, null));
        } catch (TelegramApiException e) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: {}", e.getMessage(), e);
        }
    }

    private InlineKeyboardButton createButton(String text, String callbackData, String url) {
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        if (callbackData != null) {
            button.setCallbackData(callbackData);
        }
        if (url != null) {
            button.setUrl(url);
        }
        return button;
    }

    private void sendErrorMessage(String chatId, TelegramLongPollingBot bot, String errorMessage) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(errorMessage);

        try {
            bot.execute(message);
        } catch (TelegramApiException e) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {}", e.getMessage(), e);
        }
    }
}